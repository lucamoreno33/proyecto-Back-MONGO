openapi: "3.1.0"
info:
  title: API de Productos
  version: "1.0"
paths:
  /api/products/{Pid}:
    get:
      summary: Obtiene un producto por su ID
      tags:
        - Products
      parameters:
        - name: Pid
          in: path
          required: true
          description: ID del producto que buscas
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado
    put:
      summary: Actualiza un producto por su ID
      tags:
        - Products
      parameters:
        - name: Pid
          in: path
          required: true
          description: ID del producto que buscas
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Producto actualizado con éxito
        "400":
          description: Petición incorrecta
        "404":
          description: Producto no encontrado
        "2": 
          description: Faltan datos o estan incorrectos
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CustomError"
    delete:
      summary: Elimina un producto por su ID
      tags:
        - Products
      parameters:
        - name: Pid
          in: path
          required: true
          description: ID del producto que buscas
          schema:
            type: string
      responses:
        "204":
          description: Producto eliminado con éxito
        "400":
          description: Petición incorrecta
        "401":
          description: Se debe ser dueño del producto para borrarlo
        "3": 
          description: Error de base de datos 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CustomError"  
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Número máximo de productos a devolver
          schema:
            type: integer
        - name: page
          in: query
          description: Página de resultados
          schema:
            type: integer
        - name: sort
          in: query
          description: Orden de clasificación (asc o desc)
          schema:
            type: string
        - name: query
          in: query
          description: filtro de búsqueda, por el momento solo por marca
          schema:
            type: string
        - name: statusQuery
          in: query
          description: filtro de estado, tru o false
          schema:
            type: string
      responses:
        "200":
          description: Todos los productos fueron obtenidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "3": 
          description: Error de base de datos 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CustomError"
    post:
      summary: Agrega un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json: 
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado con éxito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Petición incorrecta
        "2": 
          description: Faltan datos o estan incorrectos
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CustomError"
  /api/products/100:
    get:
      summary: Crea 100 productos de ejemplo
      tags:
        - Products
      responses:
        "200":
          description: Éxito. Devuelve los productos creados
components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Título del producto
          example: "monitor"
        status:
          type: boolean
          description: Estado del producto
          example: true
        description:
          type: string
          description: Descripción del producto
          example: "monitor gamer samsung"
        brand:
          type: string
          description: Marca del producto
          example: Redragon
        price:
          type: number
          description: Precio del producto
          example: 180000
        thumbnails:
          type: array
          description: URLs de las imágenes del producto
          example: ["monitor.jpg"]
          items:
            type: string
        code:
          type: string
          description: Código del producto
          example: 334
        stock:
          type: number
          description: Stock del producto
          example: 8
        owner:
          type: string
          description: Propietario del producto
          example: "luca@mail"
    CustomError:
      type: object
      properties:
        name:
          type: string
          example: "CustomError"
        cause:
          type: string
          example: "Error interno del servidor."
        message:
          type: string
          example: "Se ha producido un error personalizado"
        code:
          type: integer
          example: 3